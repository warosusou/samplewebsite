{"version":3,"sources":["beginning.tsx","menu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Beginning","id","sourceType","screenName","autoHeight","React","Component","Menu","className","src","App","props","opacity","state","Element","ButtonClick","component","element","document","getElementById","this","style","setState","toString","beginstyle","onClick","x","currentTarget","createElement","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","render"],"mappings":"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","file":"static/js/main.fc792ed3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./beginning.css\";\r\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\r\n\r\nclass Beginning extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"beginning\">\r\n        <div id=\"large\">\r\n          <TwitterTimelineEmbed\r\n            sourceType=\"profile\"\r\n            screenName=\"cq_connect\"\r\n            autoHeight=\"true\"\r\n          />\r\n        </div>\r\n        <ul>\r\n          <li />\r\n          <li />\r\n          <li />\r\n          <li />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Beginning;\r\n","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nclass Menu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"MenuPage\">\r\n        <div className=\"MateCourses\">\r\n          <div id=\"Courses\">\r\n            <div id=\"Course\">\r\n              <div>\r\n                <p id=\"CourseName\">数学 I</p>\r\n                <p>★</p>\r\n              </div>\r\n              <img src=\"./images/WebMain_Kuu.png\"></img>\r\n            </div>\r\n            <div id=\"Course\">\r\n              <div>\r\n                <p id=\"CourseName\">数学 II</p>\r\n                <p>★★</p>\r\n              </div>\r\n              <img src=\"./images/WebMain_Kuu.png\"></img>\r\n            </div>\r\n            <div id=\"Course\">\r\n              <div>\r\n                <p id=\"CourseName\">数学 III</p>\r\n                <p>★★★</p>\r\n              </div>\r\n              <img src=\"./images/webMain_man.png\"></img>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"Image\">\r\n            <img src=\"./images/webMain_man.png\"></img>\r\n            <img src=\"./images/WebMain_Kuu.png\"></img>\r\n          </div>\r\n        </div>\r\n        <div className=\"PhysicsCourses\">\r\n          <div id=\"Course\">\r\n            <div>\r\n              <p id=\"CourseName\">物理A</p>\r\n              <p>★</p>\r\n            </div>\r\n            <img src=\"./images/WebMain_Kuu.png\"></img>\r\n          </div>\r\n          <div id=\"Course\">\r\n            <div>\r\n              <p id=\"CourseName\">物理B</p>\r\n              <p>★★</p>\r\n            </div>\r\n            <img src=\"./images/WebMain_Kuu.png\"></img>\r\n          </div>\r\n          <div id=\"Course\">\r\n            <div>\r\n              <p id=\"CourseName\">物理C</p>\r\n              <p>★★★</p>\r\n            </div>\r\n            <img src=\"./images/webMain_man.png\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Beginning from \"./beginning\";\r\nimport Menu from \"./menu\";\r\n\r\ninterface Main {\r\n  Component: typeof React.Component;\r\n  Element: HTMLElement | null;\r\n}\r\n\r\nclass App extends React.Component<any, Main> {\r\n  opacity = 0.5;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { Component: Beginning, Element: null };\r\n    this.ButtonClick();\r\n  }\r\n\r\n  ButtonClick(): void;\r\n  ButtonClick(\r\n    component: typeof React.Component,\r\n    element: HTMLElement | null\r\n  ): void;\r\n\r\n  ButtonClick(\r\n    component?: typeof React.Component,\r\n    element?: HTMLElement | null\r\n  ): void {\r\n    if (component == null) {\r\n      component = Beginning;\r\n      element = document.getElementById(\"begin\");\r\n    } else if (element == null) {\r\n      element = document.getElementById(\"begin\");\r\n    }\r\n    if (this.state.Element != null) {\r\n      this.state.Element.style.opacity = \"1\";\r\n    }\r\n    this.setState({ Component: component, Element: element });\r\n    if (element != null) {\r\n      element.style.opacity = this.opacity.toString();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let beginstyle = {};\r\n    if (this.state.Element == null) {\r\n      beginstyle = { opacity: this.opacity };\r\n    }\r\n    return (\r\n      <div id=\"App\">\r\n        <header>\r\n          <div id=\"Left\">\r\n            <div id=\"logo\">\r\n              <img id=\"logoimg\" src=\"./images/pm.png\" />\r\n              <p></p>\r\n            </div>\r\n            <div\r\n              id=\"begin\"\r\n              style={beginstyle}\r\n              onClick={x => this.ButtonClick(Beginning, x.currentTarget)}\r\n            >\r\n              <img src=\"./images/illust4.png\" />\r\n              <p>はじめに</p>\r\n            </div>\r\n            <div\r\n              id=\"menu\"\r\n              onClick={x => this.ButtonClick(Menu, x.currentTarget)}\r\n            >\r\n              <img src=\"./images/illust6.png\" />\r\n              <p>講座一覧</p>\r\n            </div>\r\n            <div id=\"apply\">\r\n              <img />\r\n              <p>お申込み</p>\r\n            </div>\r\n            <div id=\"teacherinfo\">\r\n              <img src=\"./images/illust4.png\" />\r\n              <p>講師情報</p>\r\n            </div>\r\n            <div id=\"textbook\">\r\n              <img src=\"./images/illust6.png\" />\r\n              <p>教科書評</p>\r\n            </div>\r\n            <div id=\"qanda\">\r\n              <img src=\"./images/illust4.png\" />\r\n              <p>ご要望</p>\r\n            </div>\r\n          </div>\r\n          <div id=\"Center\">\r\n            <div id=\"faq\">\r\n              <img src=\"./images/illust4.png\" />\r\n              <p>FAQ</p>\r\n            </div>\r\n            <div id=\"access\">\r\n              <img src=\"./images/illust6.png\" />\r\n              <p>アクセス</p>\r\n            </div>\r\n            <div id=\"contact\">\r\n              <img src=\"./images/illust4.png\" />\r\n              <p>お問い合わせ</p>\r\n            </div>\r\n            <div id=\"hire\">\r\n              <img src=\"./images/illust6.png\" />\r\n              <p>採用情報</p>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div id=\"MainContent\">{React.createElement(this.state.Component)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\nReactDOM.render(<App/>,document.getElementById('header'));"],"sourceRoot":""}